#include <iostream>
#include <vector>
#include <algorithm>
#include <stdexcept>

using namespace std;

struct Date {
    int day;
    int month;
    int year;

    bool isValidDate() const {
        if (year < 0 || month < 1 || month > 12 || day < 1 || day > 31) {
            return false;
        }
        if ((month == 4 || month == 6 || month == 9 || month == 11) && day > 30) {
            return false;
        }
        if (month == 2) {
            if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {
                if (day > 29) {
                    return false;
                }
            } else {
                if (day > 28) {
                    return false;
                }
            }
        }
        return true;
    }

    void newDate(int d, int m, int y) {
        day = d;
        month = m;
        year = y;
    }

    string getDayOfWeek() const {
        static string days[] = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
        int t[] = {0, 3, 2, 5, 0, 3, 5, 1, 4, 6};
        int tempYear = year;
        tempYear -= month < 3;
        int dayOfWeek = (tempYear + tempYear / 4 - tempYear / 100 + tempYear / 400 + t[month - 1] + day) % 7;
        return days[dayOfWeek];
    }

    int calculateDifference(const Date& date) const {
        int yearDiff = year - date.year;
        int monthDiff = month - date.month;
        int dayDiff = day - date.day;
        return yearDiff * 365 + monthDiff * 30 + dayDiff;
    }

    void printDate() const {
        string monthNames[] = {"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
        cout << monthNames[month - 1] << " " << day << ", " << year << endl;
    }

    bool operator<(const Date& other) const {
        if (year != other.year) {
            return year < other.year;
        }
        if (month != other.month) {
            return month < other.month;
        }
        return day < other.day;
    }
};

bool compareDates(const Date& date1, const Date& date2) {
    return date1 < date2;
}

int main() {
    vector<Date> dates;

    int day, month, year;

    // Запрашиваем у пользователя ввод дат
    cout << "Enter dates (day month year), enter -1 to finish:\n";
    while (true) {
        cin >> day;
        if (day == -1) {
            break;
        }
        cin >> month >> year;

        Date date;
        date.newDate(day, month, year);
        
        if (date.isValidDate()) {
            dates.push_back(date);
        } else {
            cout << "Invalid date, please enter a valid date.\n";
        }
    }

    sort(dates.begin(), dates.end(), compareDates);

    cout << "\nSorted dates:\n";
    for (const auto& date : dates) {
        date.printDate();
    }

    return 0;
}
